/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout.index'
import { Route as LeaderboardLayoutImport } from './routes/leaderboard/_layout'
import { Route as FundraisersLayoutImport } from './routes/fundraisers/_layout'
import { Route as LayoutAboutImport } from './routes/_layout.about'
import { Route as LeaderboardLayoutIndexImport } from './routes/leaderboard/_layout.index'
import { Route as FundraisersLayoutIndexImport } from './routes/fundraisers/_layout.index'
import { Route as FundraisersLayoutCreateImport } from './routes/fundraisers/_layout.create'
import { Route as FundraisersLayoutIdImport } from './routes/fundraisers/_layout.$id'

// Create Virtual Routes

const LeaderboardImport = createFileRoute('/leaderboard')()
const FundraisersImport = createFileRoute('/fundraisers')()

// Create/Update Routes

const LeaderboardRoute = LeaderboardImport.update({
  id: '/leaderboard',
  path: '/leaderboard',
  getParentRoute: () => rootRoute,
} as any)

const FundraisersRoute = FundraisersImport.update({
  id: '/fundraisers',
  path: '/fundraisers',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LeaderboardLayoutRoute = LeaderboardLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => LeaderboardRoute,
} as any)

const FundraisersLayoutRoute = FundraisersLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => FundraisersRoute,
} as any)

const LayoutAboutRoute = LayoutAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => LayoutRoute,
} as any)

const LeaderboardLayoutIndexRoute = LeaderboardLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LeaderboardLayoutRoute,
} as any)

const FundraisersLayoutIndexRoute = FundraisersLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => FundraisersLayoutRoute,
} as any)

const FundraisersLayoutCreateRoute = FundraisersLayoutCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => FundraisersLayoutRoute,
} as any)

const FundraisersLayoutIdRoute = FundraisersLayoutIdImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => FundraisersLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/about': {
      id: '/_layout/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof LayoutAboutImport
      parentRoute: typeof LayoutImport
    }
    '/fundraisers': {
      id: '/fundraisers'
      path: '/fundraisers'
      fullPath: '/fundraisers'
      preLoaderRoute: typeof FundraisersImport
      parentRoute: typeof rootRoute
    }
    '/fundraisers/_layout': {
      id: '/fundraisers/_layout'
      path: '/fundraisers'
      fullPath: '/fundraisers'
      preLoaderRoute: typeof FundraisersLayoutImport
      parentRoute: typeof FundraisersRoute
    }
    '/leaderboard': {
      id: '/leaderboard'
      path: '/leaderboard'
      fullPath: '/leaderboard'
      preLoaderRoute: typeof LeaderboardImport
      parentRoute: typeof rootRoute
    }
    '/leaderboard/_layout': {
      id: '/leaderboard/_layout'
      path: '/leaderboard'
      fullPath: '/leaderboard'
      preLoaderRoute: typeof LeaderboardLayoutImport
      parentRoute: typeof LeaderboardRoute
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/fundraisers/_layout/$id': {
      id: '/fundraisers/_layout/$id'
      path: '/$id'
      fullPath: '/fundraisers/$id'
      preLoaderRoute: typeof FundraisersLayoutIdImport
      parentRoute: typeof FundraisersLayoutImport
    }
    '/fundraisers/_layout/create': {
      id: '/fundraisers/_layout/create'
      path: '/create'
      fullPath: '/fundraisers/create'
      preLoaderRoute: typeof FundraisersLayoutCreateImport
      parentRoute: typeof FundraisersLayoutImport
    }
    '/fundraisers/_layout/': {
      id: '/fundraisers/_layout/'
      path: '/'
      fullPath: '/fundraisers/'
      preLoaderRoute: typeof FundraisersLayoutIndexImport
      parentRoute: typeof FundraisersLayoutImport
    }
    '/leaderboard/_layout/': {
      id: '/leaderboard/_layout/'
      path: '/'
      fullPath: '/leaderboard/'
      preLoaderRoute: typeof LeaderboardLayoutIndexImport
      parentRoute: typeof LeaderboardLayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutAboutRoute: typeof LayoutAboutRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutAboutRoute: LayoutAboutRoute,
  LayoutIndexRoute: LayoutIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

interface FundraisersLayoutRouteChildren {
  FundraisersLayoutIdRoute: typeof FundraisersLayoutIdRoute
  FundraisersLayoutCreateRoute: typeof FundraisersLayoutCreateRoute
  FundraisersLayoutIndexRoute: typeof FundraisersLayoutIndexRoute
}

const FundraisersLayoutRouteChildren: FundraisersLayoutRouteChildren = {
  FundraisersLayoutIdRoute: FundraisersLayoutIdRoute,
  FundraisersLayoutCreateRoute: FundraisersLayoutCreateRoute,
  FundraisersLayoutIndexRoute: FundraisersLayoutIndexRoute,
}

const FundraisersLayoutRouteWithChildren =
  FundraisersLayoutRoute._addFileChildren(FundraisersLayoutRouteChildren)

interface FundraisersRouteChildren {
  FundraisersLayoutRoute: typeof FundraisersLayoutRouteWithChildren
}

const FundraisersRouteChildren: FundraisersRouteChildren = {
  FundraisersLayoutRoute: FundraisersLayoutRouteWithChildren,
}

const FundraisersRouteWithChildren = FundraisersRoute._addFileChildren(
  FundraisersRouteChildren,
)

interface LeaderboardLayoutRouteChildren {
  LeaderboardLayoutIndexRoute: typeof LeaderboardLayoutIndexRoute
}

const LeaderboardLayoutRouteChildren: LeaderboardLayoutRouteChildren = {
  LeaderboardLayoutIndexRoute: LeaderboardLayoutIndexRoute,
}

const LeaderboardLayoutRouteWithChildren =
  LeaderboardLayoutRoute._addFileChildren(LeaderboardLayoutRouteChildren)

interface LeaderboardRouteChildren {
  LeaderboardLayoutRoute: typeof LeaderboardLayoutRouteWithChildren
}

const LeaderboardRouteChildren: LeaderboardRouteChildren = {
  LeaderboardLayoutRoute: LeaderboardLayoutRouteWithChildren,
}

const LeaderboardRouteWithChildren = LeaderboardRoute._addFileChildren(
  LeaderboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/about': typeof LayoutAboutRoute
  '/fundraisers': typeof FundraisersLayoutRouteWithChildren
  '/leaderboard': typeof LeaderboardLayoutRouteWithChildren
  '/': typeof LayoutIndexRoute
  '/fundraisers/$id': typeof FundraisersLayoutIdRoute
  '/fundraisers/create': typeof FundraisersLayoutCreateRoute
  '/fundraisers/': typeof FundraisersLayoutIndexRoute
  '/leaderboard/': typeof LeaderboardLayoutIndexRoute
}

export interface FileRoutesByTo {
  '/about': typeof LayoutAboutRoute
  '/fundraisers': typeof FundraisersLayoutIndexRoute
  '/leaderboard': typeof LeaderboardLayoutIndexRoute
  '/': typeof LayoutIndexRoute
  '/fundraisers/$id': typeof FundraisersLayoutIdRoute
  '/fundraisers/create': typeof FundraisersLayoutCreateRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/about': typeof LayoutAboutRoute
  '/fundraisers': typeof FundraisersRouteWithChildren
  '/fundraisers/_layout': typeof FundraisersLayoutRouteWithChildren
  '/leaderboard': typeof LeaderboardRouteWithChildren
  '/leaderboard/_layout': typeof LeaderboardLayoutRouteWithChildren
  '/_layout/': typeof LayoutIndexRoute
  '/fundraisers/_layout/$id': typeof FundraisersLayoutIdRoute
  '/fundraisers/_layout/create': typeof FundraisersLayoutCreateRoute
  '/fundraisers/_layout/': typeof FundraisersLayoutIndexRoute
  '/leaderboard/_layout/': typeof LeaderboardLayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/about'
    | '/fundraisers'
    | '/leaderboard'
    | '/'
    | '/fundraisers/$id'
    | '/fundraisers/create'
    | '/fundraisers/'
    | '/leaderboard/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/fundraisers'
    | '/leaderboard'
    | '/'
    | '/fundraisers/$id'
    | '/fundraisers/create'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/about'
    | '/fundraisers'
    | '/fundraisers/_layout'
    | '/leaderboard'
    | '/leaderboard/_layout'
    | '/_layout/'
    | '/fundraisers/_layout/$id'
    | '/fundraisers/_layout/create'
    | '/fundraisers/_layout/'
    | '/leaderboard/_layout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  FundraisersRoute: typeof FundraisersRouteWithChildren
  LeaderboardRoute: typeof LeaderboardRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  FundraisersRoute: FundraisersRouteWithChildren,
  LeaderboardRoute: LeaderboardRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/fundraisers",
        "/leaderboard"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/about",
        "/_layout/"
      ]
    },
    "/_layout/about": {
      "filePath": "_layout.about.tsx",
      "parent": "/_layout"
    },
    "/fundraisers": {
      "filePath": "fundraisers",
      "children": [
        "/fundraisers/_layout"
      ]
    },
    "/fundraisers/_layout": {
      "filePath": "fundraisers/_layout.tsx",
      "parent": "/fundraisers",
      "children": [
        "/fundraisers/_layout/$id",
        "/fundraisers/_layout/create",
        "/fundraisers/_layout/"
      ]
    },
    "/leaderboard": {
      "filePath": "leaderboard",
      "children": [
        "/leaderboard/_layout"
      ]
    },
    "/leaderboard/_layout": {
      "filePath": "leaderboard/_layout.tsx",
      "parent": "/leaderboard",
      "children": [
        "/leaderboard/_layout/"
      ]
    },
    "/_layout/": {
      "filePath": "_layout.index.tsx",
      "parent": "/_layout"
    },
    "/fundraisers/_layout/$id": {
      "filePath": "fundraisers/_layout.$id.tsx",
      "parent": "/fundraisers/_layout"
    },
    "/fundraisers/_layout/create": {
      "filePath": "fundraisers/_layout.create.tsx",
      "parent": "/fundraisers/_layout"
    },
    "/fundraisers/_layout/": {
      "filePath": "fundraisers/_layout.index.tsx",
      "parent": "/fundraisers/_layout"
    },
    "/leaderboard/_layout/": {
      "filePath": "leaderboard/_layout.index.tsx",
      "parent": "/leaderboard/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
